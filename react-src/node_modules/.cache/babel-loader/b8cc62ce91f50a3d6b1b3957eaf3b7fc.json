{"ast":null,"code":"\"use strict\";\n\n// Converts a hex color expr. like #123456 into an array [r, g, b],\n// where r, g, b are in the range of 0 and 1\nexports.colorToRgb = function (hex) {\n  if (hex === undefined || hex === null) {\n    return;\n  }\n  if (typeof hex === \"string\") {\n    hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  }\n  const r = (hex >> 16) / 255;\n  const g = (hex >> 8 & 255) / 255;\n  const b = (hex & 255) / 255;\n  return [r, g, b];\n};\nexports.rgbEqual = function (lhs, rhs) {\n  return lhs && rhs && lhs[0] === rhs[0] && lhs[1] === rhs[1] && lhs[2] === rhs[2];\n};\nexports.toArrayBuffer = function (b) {\n  if (b instanceof ArrayBuffer) {\n    return b;\n  } else {\n    return b.buffer.slice(b.byteOffset, b.byteOffset + b.byteLength);\n  }\n};\nexports.defaults = function (val, def) {\n  return val !== undefined ? val : def;\n};\nexports.inflate = function (obj) {\n  let filters = obj.properties.get(\"Filter\");\n  let filter;\n  if (filters && Array.isArray(filters)) {\n    filter = filters.shift();\n  } else {\n    filter = filters;\n    filters = [];\n  }\n  if (!filter || filter.name !== \"FlateDecode\" || filters.length > 0) {\n    throw new Error(\"Only FlateDecode filter are supported\");\n  }\n  let columns = 1;\n  let predictor = 1;\n  const params = obj.properties.get(\"DecodeParms\");\n  if (params) {\n    columns = params.get(\"Columns\");\n    predictor = params.get(\"Predictor\");\n  }\n  const inflate = require(\"pako/lib/inflate.js\").inflate;\n  let res = inflate(obj.content.content);\n  if (predictor === 1) {\n    return res;\n  }\n  if (predictor >= 10 && predictor <= 15) {\n    // PNG filter\n    res = pngFilter(res, columns);\n  } else {\n    throw new Error(\"Unsupported predictor \" + predictor);\n  }\n  return res;\n};\nfunction pngFilter(src, columns) {\n  const columnCount = columns + 1;\n  const rowCount = src.length / columnCount;\n  const res = new Uint8Array(columns * rowCount);\n  for (let y = 0; y < rowCount; ++y) {\n    const filter = src[y * columnCount];\n    if (filter === 0) {\n      for (let x = 0; x < columns; ++x) {\n        res[y * columns + x] = src[y * columnCount + 1 + x];\n      }\n    } else if (filter === 2) {\n      for (let x = 0; x < columns; x++) {\n        const prev = y === 0 ? 0 : res[(y - 1) * columns + x];\n        res[y * columns + x] = prev + src[y * columnCount + 1 + x] & 0xff;\n      }\n    } else {\n      throw new Error(\"Unsupported PNG filter \" + filter);\n    }\n  }\n  return res;\n}","map":{"version":3,"names":["exports","colorToRgb","hex","undefined","parseInt","replace","r","g","b","rgbEqual","lhs","rhs","toArrayBuffer","ArrayBuffer","buffer","slice","byteOffset","byteLength","defaults","val","def","inflate","obj","filters","properties","get","filter","Array","isArray","shift","name","length","Error","columns","predictor","params","require","res","content","pngFilter","src","columnCount","rowCount","Uint8Array","y","x","prev"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/pdfjs/lib/util.js"],"sourcesContent":["\"use strict\";\n\n// Converts a hex color expr. like #123456 into an array [r, g, b],\n// where r, g, b are in the range of 0 and 1\nexports.colorToRgb = function (hex) {\n  if (hex === undefined || hex === null) {\n    return;\n  }\n\n  if (typeof hex === \"string\") {\n    hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  }\n\n  const r = (hex >> 16) / 255;\n  const g = ((hex >> 8) & 255) / 255;\n  const b = (hex & 255) / 255;\n\n  return [r, g, b];\n};\n\nexports.rgbEqual = function (lhs, rhs) {\n  return (\n    lhs && rhs && lhs[0] === rhs[0] && lhs[1] === rhs[1] && lhs[2] === rhs[2]\n  );\n};\n\nexports.toArrayBuffer = function (b) {\n  if (b instanceof ArrayBuffer) {\n    return b;\n  } else {\n    return b.buffer.slice(b.byteOffset, b.byteOffset + b.byteLength);\n  }\n};\n\nexports.defaults = function (val, def) {\n  return val !== undefined ? val : def;\n};\n\nexports.inflate = function (obj) {\n  let filters = obj.properties.get(\"Filter\");\n  let filter;\n  if (filters && Array.isArray(filters)) {\n    filter = filters.shift();\n  } else {\n    filter = filters;\n    filters = [];\n  }\n\n  if (!filter || filter.name !== \"FlateDecode\" || filters.length > 0) {\n    throw new Error(\"Only FlateDecode filter are supported\");\n  }\n\n  let columns = 1;\n  let predictor = 1;\n  const params = obj.properties.get(\"DecodeParms\");\n  if (params) {\n    columns = params.get(\"Columns\");\n    predictor = params.get(\"Predictor\");\n  }\n\n  const inflate = require(\"pako/lib/inflate.js\").inflate;\n  let res = inflate(obj.content.content);\n\n  if (predictor === 1) {\n    return res;\n  }\n\n  if (predictor >= 10 && predictor <= 15) {\n    // PNG filter\n    res = pngFilter(res, columns);\n  } else {\n    throw new Error(\"Unsupported predictor \" + predictor);\n  }\n\n  return res;\n};\n\nfunction pngFilter(src, columns) {\n  const columnCount = columns + 1;\n  const rowCount = src.length / columnCount;\n\n  const res = new Uint8Array(columns * rowCount);\n  for (let y = 0; y < rowCount; ++y) {\n    const filter = src[y * columnCount];\n    if (filter === 0) {\n      for (let x = 0; x < columns; ++x) {\n        res[y * columns + x] = src[y * columnCount + 1 + x];\n      }\n    } else if (filter === 2) {\n      for (let x = 0; x < columns; x++) {\n        const prev = y === 0 ? 0 : res[(y - 1) * columns + x];\n        res[y * columns + x] = (prev + src[y * columnCount + 1 + x]) & 0xff;\n      }\n    } else {\n      throw new Error(\"Unsupported PNG filter \" + filter);\n    }\n  }\n  return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}