{"ast":null,"code":"// The following break classes are handled by the pair table\nexports.OP = 0; // Opening punctuation\nexports.CL = 1; // Closing punctuation\nexports.CP = 2; // Closing parenthesis\nexports.QU = 3; // Ambiguous quotation\nexports.GL = 4; // Glue\nexports.NS = 5; // Non-starters\nexports.EX = 6; // Exclamation/Interrogation\nexports.SY = 7; // Symbols allowing break after\nexports.IS = 8; // Infix separator\nexports.PR = 9; // Prefix\nexports.PO = 10; // Postfix\nexports.NU = 11; // Numeric\nexports.AL = 12; // Alphabetic\nexports.HL = 13; // Hebrew Letter\nexports.ID = 14; // Ideographic\nexports.IN = 15; // Inseparable characters\nexports.HY = 16; // Hyphen\nexports.BA = 17; // Break after\nexports.BB = 18; // Break before\nexports.B2 = 19; // Break on either side (but not pair)\nexports.ZW = 20; // Zero-width space\nexports.CM = 21; // Combining marks\nexports.WJ = 22; // Word joiner\nexports.H2 = 23; // Hangul LV\nexports.H3 = 24; // Hangul LVT\nexports.JL = 25; // Hangul L Jamo\nexports.JV = 26; // Hangul V Jamo\nexports.JT = 27; // Hangul T Jamo\nexports.RI = 28; // Regional Indicator\n\n// The following break classes are not handled by the pair table\nexports.AI = 29; // Ambiguous (Alphabetic or Ideograph)\nexports.BK = 30; // Break (mandatory)\nexports.CB = 31; // Contingent break\nexports.CJ = 32; // Conditional Japanese Starter\nexports.CR = 33; // Carriage return\nexports.LF = 34; // Line feed\nexports.NL = 35; // Next line\nexports.SA = 36; // South-East Asian\nexports.SG = 37; // Surrogates\nexports.SP = 38; // Space\nexports.XX = 39; // Unknown","map":{"version":3,"names":["exports","OP","CL","CP","QU","GL","NS","EX","SY","IS","PR","PO","NU","AL","HL","ID","IN","HY","BA","BB","B2","ZW","CM","WJ","H2","H3","JL","JV","JT","RI","AI","BK","CB","CJ","CR","LF","NL","SA","SG","SP","XX"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/@rkusa/linebreak/src/classes.js"],"sourcesContent":["// The following break classes are handled by the pair table\nexports.OP = 0   // Opening punctuation\nexports.CL = 1   // Closing punctuation\nexports.CP = 2   // Closing parenthesis\nexports.QU = 3   // Ambiguous quotation\nexports.GL = 4   // Glue\nexports.NS = 5   // Non-starters\nexports.EX = 6   // Exclamation/Interrogation\nexports.SY = 7   // Symbols allowing break after\nexports.IS = 8   // Infix separator\nexports.PR = 9   // Prefix\nexports.PO = 10  // Postfix\nexports.NU = 11  // Numeric\nexports.AL = 12  // Alphabetic\nexports.HL = 13  // Hebrew Letter\nexports.ID = 14  // Ideographic\nexports.IN = 15  // Inseparable characters\nexports.HY = 16  // Hyphen\nexports.BA = 17  // Break after\nexports.BB = 18  // Break before\nexports.B2 = 19  // Break on either side (but not pair)\nexports.ZW = 20  // Zero-width space\nexports.CM = 21  // Combining marks\nexports.WJ = 22  // Word joiner\nexports.H2 = 23  // Hangul LV\nexports.H3 = 24  // Hangul LVT\nexports.JL = 25  // Hangul L Jamo\nexports.JV = 26  // Hangul V Jamo\nexports.JT = 27  // Hangul T Jamo\nexports.RI = 28  // Regional Indicator\n\n// The following break classes are not handled by the pair table\nexports.AI = 29  // Ambiguous (Alphabetic or Ideograph)\nexports.BK = 30  // Break (mandatory)\nexports.CB = 31  // Contingent break\nexports.CJ = 32  // Conditional Japanese Starter\nexports.CR = 33  // Carriage return\nexports.LF = 34  // Line feed\nexports.NL = 35  // Next line\nexports.SA = 36  // South-East Asian\nexports.SG = 37  // Surrogates\nexports.SP = 38  // Space\nexports.XX = 39  // Unknown\n"],"mappings":"AAAA;AACAA,OAAO,CAACC,EAAE,GAAG,CAAC,EAAG;AACjBD,OAAO,CAACE,EAAE,GAAG,CAAC,EAAG;AACjBF,OAAO,CAACG,EAAE,GAAG,CAAC,EAAG;AACjBH,OAAO,CAACI,EAAE,GAAG,CAAC,EAAG;AACjBJ,OAAO,CAACK,EAAE,GAAG,CAAC,EAAG;AACjBL,OAAO,CAACM,EAAE,GAAG,CAAC,EAAG;AACjBN,OAAO,CAACO,EAAE,GAAG,CAAC,EAAG;AACjBP,OAAO,CAACQ,EAAE,GAAG,CAAC,EAAG;AACjBR,OAAO,CAACS,EAAE,GAAG,CAAC,EAAG;AACjBT,OAAO,CAACU,EAAE,GAAG,CAAC,EAAG;AACjBV,OAAO,CAACW,EAAE,GAAG,EAAE,EAAE;AACjBX,OAAO,CAACY,EAAE,GAAG,EAAE,EAAE;AACjBZ,OAAO,CAACa,EAAE,GAAG,EAAE,EAAE;AACjBb,OAAO,CAACc,EAAE,GAAG,EAAE,EAAE;AACjBd,OAAO,CAACe,EAAE,GAAG,EAAE,EAAE;AACjBf,OAAO,CAACgB,EAAE,GAAG,EAAE,EAAE;AACjBhB,OAAO,CAACiB,EAAE,GAAG,EAAE,EAAE;AACjBjB,OAAO,CAACkB,EAAE,GAAG,EAAE,EAAE;AACjBlB,OAAO,CAACmB,EAAE,GAAG,EAAE,EAAE;AACjBnB,OAAO,CAACoB,EAAE,GAAG,EAAE,EAAE;AACjBpB,OAAO,CAACqB,EAAE,GAAG,EAAE,EAAE;AACjBrB,OAAO,CAACsB,EAAE,GAAG,EAAE,EAAE;AACjBtB,OAAO,CAACuB,EAAE,GAAG,EAAE,EAAE;AACjBvB,OAAO,CAACwB,EAAE,GAAG,EAAE,EAAE;AACjBxB,OAAO,CAACyB,EAAE,GAAG,EAAE,EAAE;AACjBzB,OAAO,CAAC0B,EAAE,GAAG,EAAE,EAAE;AACjB1B,OAAO,CAAC2B,EAAE,GAAG,EAAE,EAAE;AACjB3B,OAAO,CAAC4B,EAAE,GAAG,EAAE,EAAE;AACjB5B,OAAO,CAAC6B,EAAE,GAAG,EAAE,EAAE;;AAEjB;AACA7B,OAAO,CAAC8B,EAAE,GAAG,EAAE,EAAE;AACjB9B,OAAO,CAAC+B,EAAE,GAAG,EAAE,EAAE;AACjB/B,OAAO,CAACgC,EAAE,GAAG,EAAE,EAAE;AACjBhC,OAAO,CAACiC,EAAE,GAAG,EAAE,EAAE;AACjBjC,OAAO,CAACkC,EAAE,GAAG,EAAE,EAAE;AACjBlC,OAAO,CAACmC,EAAE,GAAG,EAAE,EAAE;AACjBnC,OAAO,CAACoC,EAAE,GAAG,EAAE,EAAE;AACjBpC,OAAO,CAACqC,EAAE,GAAG,EAAE,EAAE;AACjBrC,OAAO,CAACsC,EAAE,GAAG,EAAE,EAAE;AACjBtC,OAAO,CAACuC,EAAE,GAAG,EAAE,EAAE;AACjBvC,OAAO,CAACwC,EAAE,GAAG,EAAE,EAAE"},"metadata":{},"sourceType":"script"}