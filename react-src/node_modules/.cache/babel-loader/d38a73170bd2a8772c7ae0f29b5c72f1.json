{"ast":null,"code":"\"use strict\";\n\nconst PDFDictionary = require(\"./dictionary\");\nconst PDFReference = require(\"./reference\");\nconst PDFValue = require(\"./value\");\nclass PDFObject {\n  constructor(type) {\n    this.id = null;\n    this.rev = 0;\n    this.properties = new PDFDictionary();\n    this.reference = new PDFReference(this);\n    this.content = null;\n    if (type) {\n      this.prop(\"Type\", type);\n    }\n\n    // TODO: still necessary?\n    // used to have obj.object API for both indirect and direct objects\n    //   this.object = this\n  }\n\n  prop(key, val) {\n    this.properties.add(key, val);\n  }\n  toReference() {\n    return this.reference;\n  }\n  toString() {\n    return this.id.toString() + \" \" + this.rev + \" obj\\n\" + (this.properties.length ? this.properties.toString() + \"\\n\" : \"\") + (this.content !== null ? this.content.toString() + \"\\n\" : \"\") + \"endobj\";\n  }\n  static parse(xref, lexer, trial) {\n    const before = lexer.pos;\n    lexer.skipWhitespace(null, true);\n    const id = lexer.readNumber(trial);\n    if (id === undefined && !trial) {\n      throw new Error(\"Invalid object\");\n    }\n    lexer.skipWhitespace(1, trial);\n    const generation = lexer.readNumber(trial);\n    if (generation === undefined && !trial) {\n      throw new Error(\"Invalid object\");\n    }\n    lexer.skipWhitespace(1, trial);\n    if (lexer.getString(3) !== \"obj\") {\n      if (trial) {\n        lexer.pos = before;\n        return undefined;\n      }\n      throw new Error(\"Invalid object\");\n    }\n    lexer.shift(3);\n    lexer.skipEOL(1, true);\n    lexer.skipWhitespace(null, true);\n    const obj = PDFObject.parseInner(xref, lexer);\n    lexer.skipWhitespace(null, true);\n    if (lexer.readString(3) !== \"end\") {\n      throw new Error(\"Invalid object: `end` not found\");\n    }\n    return obj;\n  }\n  static parseInner(xref, lexer) {\n    const value = PDFValue.parse(xref, lexer, true);\n    if (value === undefined) {\n      throw new Error(\"Empty object\");\n    }\n    lexer.skipWhitespace(null, true);\n    const obj = new PDFObject();\n    if (value instanceof PDFDictionary) {\n      obj.properties = value;\n      if (lexer.getString(6) === \"stream\") {\n        lexer.shift(6);\n        lexer.skipEOL(1);\n        let length = obj.properties.get(\"Length\");\n        if (length === undefined) {\n          throw new Error(\"Invalid Stream: no length specified\");\n        }\n        if (typeof length === \"object\") {\n          const pos = lexer.pos;\n          length = length.object.content;\n          lexer.pos = pos;\n        }\n        const PDFStream = require(\"./stream\"); // lazy load, cause circular referecnes\n        const stream = new PDFStream(obj);\n        stream.content = lexer.read(length);\n        lexer.skipEOL(1, true);\n\n        // not to be expected according to the PDF spec, but there are some PDF files that indent\n        // the stream\n        lexer.skipWhitespace(null, true);\n        if (lexer.readString(9) !== \"endstream\") {\n          throw new Error(\"Invalid stream: `endstream` not found\");\n        }\n        lexer.skipEOL(1, true);\n      }\n    } else {\n      obj.content = value;\n    }\n    return obj;\n  }\n}\nmodule.exports = PDFObject;","map":{"version":3,"names":["PDFDictionary","require","PDFReference","PDFValue","PDFObject","constructor","type","id","rev","properties","reference","content","prop","key","val","add","toReference","toString","length","parse","xref","lexer","trial","before","pos","skipWhitespace","readNumber","undefined","Error","generation","getString","shift","skipEOL","obj","parseInner","readString","value","get","object","PDFStream","stream","read","module","exports"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/pdfjs/lib/object/object.js"],"sourcesContent":["\"use strict\";\n\nconst PDFDictionary = require(\"./dictionary\");\nconst PDFReference = require(\"./reference\");\nconst PDFValue = require(\"./value\");\n\nclass PDFObject {\n  constructor(type) {\n    this.id = null;\n    this.rev = 0;\n    this.properties = new PDFDictionary();\n    this.reference = new PDFReference(this);\n    this.content = null;\n\n    if (type) {\n      this.prop(\"Type\", type);\n    }\n\n    // TODO: still necessary?\n    // used to have obj.object API for both indirect and direct objects\n    //   this.object = this\n  }\n\n  prop(key, val) {\n    this.properties.add(key, val);\n  }\n\n  toReference() {\n    return this.reference;\n  }\n\n  toString() {\n    return (\n      this.id.toString() +\n      \" \" +\n      this.rev +\n      \" obj\\n\" +\n      (this.properties.length ? this.properties.toString() + \"\\n\" : \"\") +\n      (this.content !== null ? this.content.toString() + \"\\n\" : \"\") +\n      \"endobj\"\n    );\n  }\n\n  static parse(xref, lexer, trial) {\n    const before = lexer.pos;\n\n    lexer.skipWhitespace(null, true);\n    const id = lexer.readNumber(trial);\n    if (id === undefined && !trial) {\n      throw new Error(\"Invalid object\");\n    }\n    lexer.skipWhitespace(1, trial);\n    const generation = lexer.readNumber(trial);\n    if (generation === undefined && !trial) {\n      throw new Error(\"Invalid object\");\n    }\n\n    lexer.skipWhitespace(1, trial);\n    if (lexer.getString(3) !== \"obj\") {\n      if (trial) {\n        lexer.pos = before;\n        return undefined;\n      }\n\n      throw new Error(\"Invalid object\");\n    }\n\n    lexer.shift(3);\n\n    lexer.skipEOL(1, true);\n    lexer.skipWhitespace(null, true);\n\n    const obj = PDFObject.parseInner(xref, lexer);\n\n    lexer.skipWhitespace(null, true);\n\n    if (lexer.readString(3) !== \"end\") {\n      throw new Error(\"Invalid object: `end` not found\");\n    }\n\n    return obj;\n  }\n\n  static parseInner(xref, lexer) {\n    const value = PDFValue.parse(xref, lexer, true);\n    if (value === undefined) {\n      throw new Error(\"Empty object\");\n    }\n\n    lexer.skipWhitespace(null, true);\n\n    const obj = new PDFObject();\n    if (value instanceof PDFDictionary) {\n      obj.properties = value;\n\n      if (lexer.getString(6) === \"stream\") {\n        lexer.shift(6);\n        lexer.skipEOL(1);\n\n        let length = obj.properties.get(\"Length\");\n        if (length === undefined) {\n          throw new Error(\"Invalid Stream: no length specified\");\n        }\n\n        if (typeof length === \"object\") {\n          const pos = lexer.pos;\n          length = length.object.content;\n          lexer.pos = pos;\n        }\n\n        const PDFStream = require(\"./stream\"); // lazy load, cause circular referecnes\n        const stream = new PDFStream(obj);\n        stream.content = lexer.read(length);\n        lexer.skipEOL(1, true);\n\n        // not to be expected according to the PDF spec, but there are some PDF files that indent\n        // the stream\n        lexer.skipWhitespace(null, true);\n\n        if (lexer.readString(9) !== \"endstream\") {\n          throw new Error(\"Invalid stream: `endstream` not found\");\n        }\n\n        lexer.skipEOL(1, true);\n      }\n    } else {\n      obj.content = value;\n    }\n\n    return obj;\n  }\n}\n\nmodule.exports = PDFObject;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}