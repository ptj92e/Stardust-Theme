{"ast":null,"code":"\"use strict\";\n\nconst opentype = require(\"opentype.js\");\nconst FontSubset = require(\"./subset\");\nconst PDFName = require(\"../object/name\");\nconst PDFObject = require(\"../object/object\");\nconst PDFDictionary = require(\"../object/dictionary\");\nconst PDFString = require(\"../object/string\");\nconst PDFArray = require(\"../object/array\");\nconst PDFStream = require(\"../object/stream\");\nconst Base = require(\"./base\");\nconst StringWidth = Base.StringWidth;\nconst util = require(\"../util\");\nmodule.exports = class OTFFontFactory extends Base {\n  constructor(b) {\n    super();\n\n    // convert to array buffer\n    const ab = util.toArrayBuffer(b);\n    this.font = opentype.parse(ab);\n  }\n  instance() {\n    return new OTFFont(this.font, this);\n  }\n};\nclass OTFFont {\n  constructor(font, parent) {\n    this.font = font;\n    this.parent = parent;\n    this.subset = new FontSubset(this.font);\n    this.subset.use(\" \");\n  }\n  encode(str) {\n    this.subset.use(str);\n    return new PDFString(this.subset.encode(str)).toHexString();\n  }\n  stringWidth(str, size) {\n    const scale = size / this.font.unitsPerEm;\n    const glyphs = this.font.stringToGlyphs(str);\n    const kerning = [];\n    let width = 0;\n    for (let i = 0, len = glyphs.length; i < len; ++i) {\n      const left = glyphs[i];\n      const right = glyphs[i + 1];\n      width += left.advanceWidth;\n      if (right) {\n        const offset = -this.font.getKerningValue(left, right);\n        if (offset !== 0) {\n          width += offset;\n          kerning.push({\n            pos: i + 1,\n            offset: offset\n          });\n        }\n      }\n    }\n    return new StringWidth(width * scale, kerning);\n  }\n  lineHeight(size, includeGap) {\n    if (includeGap == null) {\n      includeGap = false;\n    }\n    const gap = includeGap ? this.font.tables.os2.sTypoLineGap : 0;\n    const ascent = this.font.tables.os2.sTypoAscender;\n    const descent = this.font.tables.os2.sTypoDescender;\n    return (ascent + gap - descent) * size / this.font.unitsPerEm;\n  }\n  ascent(size) {\n    return this.font.tables.os2.sTypoAscender * size / this.font.unitsPerEm;\n  }\n  descent(size) {\n    return this.font.tables.os2.sTypoDescender * size / this.font.unitsPerEm;\n  }\n  underlinePosition(size) {\n    return this.font.tables.post.underlinePosition * size / this.font.unitsPerEm;\n  }\n  underlineThickness(size) {\n    return this.font.tables.post.underlineThickness * size / this.font.unitsPerEm;\n  }\n  async write(doc, fontObj) {\n    const head = this.font.tables.head;\n    const scaleFactor = 1000.0 / this.font.unitsPerEm;\n    let flags = 0;\n    const familyClass = (this.font.tables.os2.sFamilyClass || 0) >> 8;\n    const isSerif = !!~[1, 2, 3, 4, 5, 6, 7].indexOf(familyClass);\n    const isFixedPitch = this.font.tables.post.isFixedPitch;\n    const italicAngle = this.font.tables.post.italicAngle;\n    if (isFixedPitch) flags |= 1 << 0;\n    if (isSerif) flags |= 1 << 1;\n    if (familyClass === 10) flags |= 1 << 3;\n    if (italicAngle !== 0) flags |= 1 << 6;\n    /* assume not being symbolic */\n    flags |= 1 << 5;\n\n    // font descriptor\n    const descriptor = new PDFObject(\"FontDescriptor\");\n    descriptor.prop(\"FontName\", this.subset.name);\n    descriptor.prop(\"Flags\", flags);\n    descriptor.prop(\"FontBBox\", new PDFArray([head.xMin * scaleFactor, head.yMin * scaleFactor, head.xMax * scaleFactor, head.yMax * scaleFactor]));\n    descriptor.prop(\"ItalicAngle\", italicAngle);\n    descriptor.prop(\"Ascent\", this.font.tables.os2.sTypoAscender * scaleFactor);\n    descriptor.prop(\"Descent\", this.font.tables.os2.sTypoDescender * scaleFactor);\n    descriptor.prop(\"CapHeight\", this.font.tables.os2.sCapHeight * scaleFactor);\n    descriptor.prop(\"XHeight\", this.font.tables.os2.sxHeight * scaleFactor);\n    descriptor.prop(\"StemV\", 0);\n    const descendant = new PDFObject(\"Font\");\n    descendant.prop(\"Subtype\", \"CIDFontType0\");\n    descendant.prop(\"BaseFont\", this.font.names.postScriptName.en);\n    descendant.prop(\"DW\", 1000);\n    descendant.prop(\"CIDToGIDMap\", \"Identity\");\n    descendant.prop(\"CIDSystemInfo\", new PDFDictionary({\n      Ordering: new PDFString(\"Identity\"),\n      Registry: new PDFString(\"Adobe\"),\n      Supplement: 0\n    }));\n    descendant.prop(\"FontDescriptor\", descriptor.toReference());\n    fontObj.prop(\"Subtype\", \"Type0\");\n    fontObj.prop(\"BaseFont\", this.font.names.postScriptName.en);\n    fontObj.prop(\"Encoding\", \"Identity-H\");\n    fontObj.prop(\"DescendantFonts\", new PDFArray([descendant.toReference()]));\n\n    // widths array\n    const metrics = [],\n      codeMap = this.subset.cmap();\n    for (const code in codeMap) {\n      if (code < 32) {\n        continue;\n      }\n      const width = Math.round(this.subset.glyphs[code].advanceWidth * scaleFactor);\n      metrics.push(code - 31);\n      metrics.push(new PDFArray([width]));\n    }\n    descendant.prop(\"W\", new PDFArray(metrics));\n\n    // unicode map\n    const cmap = new PDFStream();\n    cmap.writeLine(\"/CIDInit /ProcSet findresource begin\");\n    cmap.writeLine(\"12 dict begin\");\n    cmap.writeLine(\"begincmap\");\n    cmap.writeLine(\"/CIDSystemInfo <<\");\n    cmap.writeLine(\"  /Registry (Adobe)\");\n    cmap.writeLine(\"  /Ordering (Identity)\");\n    cmap.writeLine(\"  /Supplement 0\");\n    cmap.writeLine(\">> def\");\n    cmap.writeLine(\"/CMapName /Identity-H\");\n    cmap.writeLine(\"/CMapType 2 def\");\n    cmap.writeLine(\"1 begincodespacerange\");\n    cmap.writeLine(\"<0000><ffff>\");\n    cmap.writeLine(\"endcodespacerange\");\n    const mapping = this.subset.subset,\n      lines = [];\n    for (const code in mapping) {\n      if (code < 32) {\n        continue;\n      }\n      if (lines.length >= 100) {\n        cmap.writeLine(lines.length + \" beginbfchar\");\n        for (let i = 0; i < lines.length; ++i) {\n          cmap.writeLine(lines[i]);\n        }\n        cmap.writeLine(\"endbfchar\");\n        lines.length = 0;\n      }\n      lines.push(\"<\" + (\"0000\" + (+code - 31).toString(16)).slice(-4) + \">\" +\n      // cid\n      \"<\" + (\"0000\" + mapping[code].toString(16)).slice(-4) + \">\" // gid\n      );\n    }\n\n    if (lines.length) {\n      cmap.writeLine(lines.length + \" beginbfchar\");\n      lines.forEach(function (line) {\n        cmap.writeLine(line);\n      });\n      cmap.writeLine(\"endbfchar\");\n    }\n    cmap.writeLine(\"endcmap\");\n    cmap.writeLine(\"CMapName currentdict /CMap defineresource pop\");\n    cmap.writeLine(\"end\");\n    cmap.writeLine(\"end\");\n    fontObj.prop(\"ToUnicode\", cmap.toReference());\n\n    // font file\n    const data = this.subset.save();\n    const hex = ab2hex(data);\n    const file = new PDFStream();\n    file.object.prop(\"Subtype\", \"OpenType\");\n    file.object.prop(\"Length\", hex.length + 1);\n    file.object.prop(\"Length1\", data.byteLength);\n    file.object.prop(\"Filter\", \"ASCIIHexDecode\");\n    file.content = hex + \">\\n\";\n    descriptor.prop(\"FontFile3\", file.toReference());\n    await doc._writeObject(file);\n    await doc._writeObject(descriptor);\n    await doc._writeObject(descendant);\n    await doc._writeObject(cmap);\n    await doc._writeObject(fontObj);\n  }\n}\nfunction toHex(n) {\n  if (n < 16) return \"0\" + n.toString(16);\n  return n.toString(16);\n}\nfunction ab2hex(ab) {\n  const view = new Uint8Array(ab);\n  let hex = \"\";\n  for (let i = 0, len = ab.byteLength; i < len; ++i) {\n    hex += toHex(view[i]);\n  }\n  return hex;\n}","map":{"version":3,"names":["opentype","require","FontSubset","PDFName","PDFObject","PDFDictionary","PDFString","PDFArray","PDFStream","Base","StringWidth","util","module","exports","OTFFontFactory","constructor","b","ab","toArrayBuffer","font","parse","instance","OTFFont","parent","subset","use","encode","str","toHexString","stringWidth","size","scale","unitsPerEm","glyphs","stringToGlyphs","kerning","width","i","len","length","left","right","advanceWidth","offset","getKerningValue","push","pos","lineHeight","includeGap","gap","tables","os2","sTypoLineGap","ascent","sTypoAscender","descent","sTypoDescender","underlinePosition","post","underlineThickness","write","doc","fontObj","head","scaleFactor","flags","familyClass","sFamilyClass","isSerif","indexOf","isFixedPitch","italicAngle","descriptor","prop","name","xMin","yMin","xMax","yMax","sCapHeight","sxHeight","descendant","names","postScriptName","en","Ordering","Registry","Supplement","toReference","metrics","codeMap","cmap","code","Math","round","writeLine","mapping","lines","toString","slice","forEach","line","data","save","hex","ab2hex","file","object","byteLength","content","_writeObject","toHex","n","view","Uint8Array"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/pdfjs/lib/font/otf.js"],"sourcesContent":["\"use strict\";\n\nconst opentype = require(\"opentype.js\");\nconst FontSubset = require(\"./subset\");\nconst PDFName = require(\"../object/name\");\nconst PDFObject = require(\"../object/object\");\nconst PDFDictionary = require(\"../object/dictionary\");\nconst PDFString = require(\"../object/string\");\nconst PDFArray = require(\"../object/array\");\nconst PDFStream = require(\"../object/stream\");\nconst Base = require(\"./base\");\nconst StringWidth = Base.StringWidth;\nconst util = require(\"../util\");\n\nmodule.exports = class OTFFontFactory extends Base {\n  constructor(b) {\n    super();\n\n    // convert to array buffer\n    const ab = util.toArrayBuffer(b);\n    this.font = opentype.parse(ab);\n  }\n\n  instance() {\n    return new OTFFont(this.font, this);\n  }\n};\n\nclass OTFFont {\n  constructor(font, parent) {\n    this.font = font;\n    this.parent = parent;\n\n    this.subset = new FontSubset(this.font);\n    this.subset.use(\" \");\n  }\n\n  encode(str) {\n    this.subset.use(str);\n    return new PDFString(this.subset.encode(str)).toHexString();\n  }\n\n  stringWidth(str, size) {\n    const scale = size / this.font.unitsPerEm;\n    const glyphs = this.font.stringToGlyphs(str);\n    const kerning = [];\n\n    let width = 0;\n    for (let i = 0, len = glyphs.length; i < len; ++i) {\n      const left = glyphs[i];\n      const right = glyphs[i + 1];\n\n      width += left.advanceWidth;\n      if (right) {\n        const offset = -this.font.getKerningValue(left, right);\n\n        if (offset !== 0) {\n          width += offset;\n          kerning.push({ pos: i + 1, offset: offset });\n        }\n      }\n    }\n\n    return new StringWidth(width * scale, kerning);\n  }\n\n  lineHeight(size, includeGap) {\n    if (includeGap == null) {\n      includeGap = false;\n    }\n\n    const gap = includeGap ? this.font.tables.os2.sTypoLineGap : 0;\n    const ascent = this.font.tables.os2.sTypoAscender;\n    const descent = this.font.tables.os2.sTypoDescender;\n\n    return ((ascent + gap - descent) * size) / this.font.unitsPerEm;\n  }\n\n  ascent(size) {\n    return (this.font.tables.os2.sTypoAscender * size) / this.font.unitsPerEm;\n  }\n\n  descent(size) {\n    return (this.font.tables.os2.sTypoDescender * size) / this.font.unitsPerEm;\n  }\n\n  underlinePosition(size) {\n    return (\n      (this.font.tables.post.underlinePosition * size) / this.font.unitsPerEm\n    );\n  }\n\n  underlineThickness(size) {\n    return (\n      (this.font.tables.post.underlineThickness * size) / this.font.unitsPerEm\n    );\n  }\n\n  async write(doc, fontObj) {\n    const head = this.font.tables.head;\n\n    const scaleFactor = 1000.0 / this.font.unitsPerEm;\n\n    let flags = 0;\n    const familyClass = (this.font.tables.os2.sFamilyClass || 0) >> 8;\n    const isSerif = !!~[1, 2, 3, 4, 5, 6, 7].indexOf(familyClass);\n    const isFixedPitch = this.font.tables.post.isFixedPitch;\n    const italicAngle = this.font.tables.post.italicAngle;\n\n    if (isFixedPitch) flags |= 1 << 0;\n    if (isSerif) flags |= 1 << 1;\n    if (familyClass === 10) flags |= 1 << 3;\n    if (italicAngle !== 0) flags |= 1 << 6;\n    /* assume not being symbolic */ flags |= 1 << 5;\n\n    // font descriptor\n    const descriptor = new PDFObject(\"FontDescriptor\");\n    descriptor.prop(\"FontName\", this.subset.name);\n    descriptor.prop(\"Flags\", flags);\n    descriptor.prop(\n      \"FontBBox\",\n      new PDFArray([\n        head.xMin * scaleFactor,\n        head.yMin * scaleFactor,\n        head.xMax * scaleFactor,\n        head.yMax * scaleFactor,\n      ]),\n    );\n    descriptor.prop(\"ItalicAngle\", italicAngle);\n    descriptor.prop(\"Ascent\", this.font.tables.os2.sTypoAscender * scaleFactor);\n    descriptor.prop(\n      \"Descent\",\n      this.font.tables.os2.sTypoDescender * scaleFactor,\n    );\n    descriptor.prop(\"CapHeight\", this.font.tables.os2.sCapHeight * scaleFactor);\n    descriptor.prop(\"XHeight\", this.font.tables.os2.sxHeight * scaleFactor);\n    descriptor.prop(\"StemV\", 0);\n\n    const descendant = new PDFObject(\"Font\");\n    descendant.prop(\"Subtype\", \"CIDFontType0\");\n    descendant.prop(\"BaseFont\", this.font.names.postScriptName.en);\n    descendant.prop(\"DW\", 1000);\n    descendant.prop(\"CIDToGIDMap\", \"Identity\");\n    descendant.prop(\n      \"CIDSystemInfo\",\n      new PDFDictionary({\n        Ordering: new PDFString(\"Identity\"),\n        Registry: new PDFString(\"Adobe\"),\n        Supplement: 0,\n      }),\n    );\n    descendant.prop(\"FontDescriptor\", descriptor.toReference());\n\n    fontObj.prop(\"Subtype\", \"Type0\");\n    fontObj.prop(\"BaseFont\", this.font.names.postScriptName.en);\n    fontObj.prop(\"Encoding\", \"Identity-H\");\n    fontObj.prop(\"DescendantFonts\", new PDFArray([descendant.toReference()]));\n\n    // widths array\n    const metrics = [],\n      codeMap = this.subset.cmap();\n    for (const code in codeMap) {\n      if (code < 32) {\n        continue;\n      }\n\n      const width = Math.round(\n        this.subset.glyphs[code].advanceWidth * scaleFactor,\n      );\n      metrics.push(code - 31);\n      metrics.push(new PDFArray([width]));\n    }\n\n    descendant.prop(\"W\", new PDFArray(metrics));\n\n    // unicode map\n    const cmap = new PDFStream();\n    cmap.writeLine(\"/CIDInit /ProcSet findresource begin\");\n    cmap.writeLine(\"12 dict begin\");\n    cmap.writeLine(\"begincmap\");\n    cmap.writeLine(\"/CIDSystemInfo <<\");\n    cmap.writeLine(\"  /Registry (Adobe)\");\n    cmap.writeLine(\"  /Ordering (Identity)\");\n    cmap.writeLine(\"  /Supplement 0\");\n    cmap.writeLine(\">> def\");\n    cmap.writeLine(\"/CMapName /Identity-H\");\n    cmap.writeLine(\"/CMapType 2 def\");\n    cmap.writeLine(\"1 begincodespacerange\");\n    cmap.writeLine(\"<0000><ffff>\");\n    cmap.writeLine(\"endcodespacerange\");\n\n    const mapping = this.subset.subset,\n      lines = [];\n    for (const code in mapping) {\n      if (code < 32) {\n        continue;\n      }\n\n      if (lines.length >= 100) {\n        cmap.writeLine(lines.length + \" beginbfchar\");\n        for (let i = 0; i < lines.length; ++i) {\n          cmap.writeLine(lines[i]);\n        }\n        cmap.writeLine(\"endbfchar\");\n        lines.length = 0;\n      }\n\n      lines.push(\n        \"<\" +\n          (\"0000\" + (+code - 31).toString(16)).slice(-4) +\n          \">\" + // cid\n          \"<\" +\n          (\"0000\" + mapping[code].toString(16)).slice(-4) +\n          \">\", // gid\n      );\n    }\n\n    if (lines.length) {\n      cmap.writeLine(lines.length + \" beginbfchar\");\n      lines.forEach(function (line) {\n        cmap.writeLine(line);\n      });\n      cmap.writeLine(\"endbfchar\");\n    }\n\n    cmap.writeLine(\"endcmap\");\n    cmap.writeLine(\"CMapName currentdict /CMap defineresource pop\");\n    cmap.writeLine(\"end\");\n    cmap.writeLine(\"end\");\n\n    fontObj.prop(\"ToUnicode\", cmap.toReference());\n\n    // font file\n    const data = this.subset.save();\n    const hex = ab2hex(data);\n\n    const file = new PDFStream();\n    file.object.prop(\"Subtype\", \"OpenType\");\n    file.object.prop(\"Length\", hex.length + 1);\n    file.object.prop(\"Length1\", data.byteLength);\n    file.object.prop(\"Filter\", \"ASCIIHexDecode\");\n    file.content = hex + \">\\n\";\n\n    descriptor.prop(\"FontFile3\", file.toReference());\n\n    await doc._writeObject(file);\n    await doc._writeObject(descriptor);\n    await doc._writeObject(descendant);\n    await doc._writeObject(cmap);\n    await doc._writeObject(fontObj);\n  }\n}\n\nfunction toHex(n) {\n  if (n < 16) return \"0\" + n.toString(16);\n  return n.toString(16);\n}\n\nfunction ab2hex(ab) {\n  const view = new Uint8Array(ab);\n  let hex = \"\";\n  for (let i = 0, len = ab.byteLength; i < len; ++i) {\n    hex += toHex(view[i]);\n  }\n  return hex;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMC,UAAU,GAAGD,OAAO,CAAC,UAAU,CAAC;AACtC,MAAME,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMI,aAAa,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMM,QAAQ,GAAGN,OAAO,CAAC,iBAAiB,CAAC;AAC3C,MAAMO,SAAS,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMQ,IAAI,GAAGR,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMS,WAAW,GAAGD,IAAI,CAACC,WAAW;AACpC,MAAMC,IAAI,GAAGV,OAAO,CAAC,SAAS,CAAC;AAE/BW,MAAM,CAACC,OAAO,GAAG,MAAMC,cAAc,SAASL,IAAI,CAAC;EACjDM,WAAWA,CAACC,CAAC,EAAE;IACb,KAAK,EAAE;;IAEP;IACA,MAAMC,EAAE,GAAGN,IAAI,CAACO,aAAa,CAACF,CAAC,CAAC;IAChC,IAAI,CAACG,IAAI,GAAGnB,QAAQ,CAACoB,KAAK,CAACH,EAAE,CAAC;EAChC;EAEAI,QAAQA,CAAA,EAAG;IACT,OAAO,IAAIC,OAAO,CAAC,IAAI,CAACH,IAAI,EAAE,IAAI,CAAC;EACrC;AACF,CAAC;AAED,MAAMG,OAAO,CAAC;EACZP,WAAWA,CAACI,IAAI,EAAEI,MAAM,EAAE;IACxB,IAAI,CAACJ,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACI,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACC,MAAM,GAAG,IAAItB,UAAU,CAAC,IAAI,CAACiB,IAAI,CAAC;IACvC,IAAI,CAACK,MAAM,CAACC,GAAG,CAAC,GAAG,CAAC;EACtB;EAEAC,MAAMA,CAACC,GAAG,EAAE;IACV,IAAI,CAACH,MAAM,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB,OAAO,IAAIrB,SAAS,CAAC,IAAI,CAACkB,MAAM,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,EAAE;EAC7D;EAEAC,WAAWA,CAACF,GAAG,EAAEG,IAAI,EAAE;IACrB,MAAMC,KAAK,GAAGD,IAAI,GAAG,IAAI,CAACX,IAAI,CAACa,UAAU;IACzC,MAAMC,MAAM,GAAG,IAAI,CAACd,IAAI,CAACe,cAAc,CAACP,GAAG,CAAC;IAC5C,MAAMQ,OAAO,GAAG,EAAE;IAElB,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,MAAM,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;MACjD,MAAMG,IAAI,GAAGP,MAAM,CAACI,CAAC,CAAC;MACtB,MAAMI,KAAK,GAAGR,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC;MAE3BD,KAAK,IAAII,IAAI,CAACE,YAAY;MAC1B,IAAID,KAAK,EAAE;QACT,MAAME,MAAM,GAAG,CAAC,IAAI,CAACxB,IAAI,CAACyB,eAAe,CAACJ,IAAI,EAAEC,KAAK,CAAC;QAEtD,IAAIE,MAAM,KAAK,CAAC,EAAE;UAChBP,KAAK,IAAIO,MAAM;UACfR,OAAO,CAACU,IAAI,CAAC;YAAEC,GAAG,EAAET,CAAC,GAAG,CAAC;YAAEM,MAAM,EAAEA;UAAO,CAAC,CAAC;QAC9C;MACF;IACF;IAEA,OAAO,IAAIjC,WAAW,CAAC0B,KAAK,GAAGL,KAAK,EAAEI,OAAO,CAAC;EAChD;EAEAY,UAAUA,CAACjB,IAAI,EAAEkB,UAAU,EAAE;IAC3B,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtBA,UAAU,GAAG,KAAK;IACpB;IAEA,MAAMC,GAAG,GAAGD,UAAU,GAAG,IAAI,CAAC7B,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACC,YAAY,GAAG,CAAC;IAC9D,MAAMC,MAAM,GAAG,IAAI,CAAClC,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACG,aAAa;IACjD,MAAMC,OAAO,GAAG,IAAI,CAACpC,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACK,cAAc;IAEnD,OAAQ,CAACH,MAAM,GAAGJ,GAAG,GAAGM,OAAO,IAAIzB,IAAI,GAAI,IAAI,CAACX,IAAI,CAACa,UAAU;EACjE;EAEAqB,MAAMA,CAACvB,IAAI,EAAE;IACX,OAAQ,IAAI,CAACX,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACG,aAAa,GAAGxB,IAAI,GAAI,IAAI,CAACX,IAAI,CAACa,UAAU;EAC3E;EAEAuB,OAAOA,CAACzB,IAAI,EAAE;IACZ,OAAQ,IAAI,CAACX,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACK,cAAc,GAAG1B,IAAI,GAAI,IAAI,CAACX,IAAI,CAACa,UAAU;EAC5E;EAEAyB,iBAAiBA,CAAC3B,IAAI,EAAE;IACtB,OACG,IAAI,CAACX,IAAI,CAAC+B,MAAM,CAACQ,IAAI,CAACD,iBAAiB,GAAG3B,IAAI,GAAI,IAAI,CAACX,IAAI,CAACa,UAAU;EAE3E;EAEA2B,kBAAkBA,CAAC7B,IAAI,EAAE;IACvB,OACG,IAAI,CAACX,IAAI,CAAC+B,MAAM,CAACQ,IAAI,CAACC,kBAAkB,GAAG7B,IAAI,GAAI,IAAI,CAACX,IAAI,CAACa,UAAU;EAE5E;EAEA,MAAM4B,KAAKA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACxB,MAAMC,IAAI,GAAG,IAAI,CAAC5C,IAAI,CAAC+B,MAAM,CAACa,IAAI;IAElC,MAAMC,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC7C,IAAI,CAACa,UAAU;IAEjD,IAAIiC,KAAK,GAAG,CAAC;IACb,MAAMC,WAAW,GAAG,CAAC,IAAI,CAAC/C,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACgB,YAAY,IAAI,CAAC,KAAK,CAAC;IACjE,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAACH,WAAW,CAAC;IAC7D,MAAMI,YAAY,GAAG,IAAI,CAACnD,IAAI,CAAC+B,MAAM,CAACQ,IAAI,CAACY,YAAY;IACvD,MAAMC,WAAW,GAAG,IAAI,CAACpD,IAAI,CAAC+B,MAAM,CAACQ,IAAI,CAACa,WAAW;IAErD,IAAID,YAAY,EAAEL,KAAK,IAAI,CAAC,IAAI,CAAC;IACjC,IAAIG,OAAO,EAAEH,KAAK,IAAI,CAAC,IAAI,CAAC;IAC5B,IAAIC,WAAW,KAAK,EAAE,EAAED,KAAK,IAAI,CAAC,IAAI,CAAC;IACvC,IAAIM,WAAW,KAAK,CAAC,EAAEN,KAAK,IAAI,CAAC,IAAI,CAAC;IACtC;IAAgCA,KAAK,IAAI,CAAC,IAAI,CAAC;;IAE/C;IACA,MAAMO,UAAU,GAAG,IAAIpE,SAAS,CAAC,gBAAgB,CAAC;IAClDoE,UAAU,CAACC,IAAI,CAAC,UAAU,EAAE,IAAI,CAACjD,MAAM,CAACkD,IAAI,CAAC;IAC7CF,UAAU,CAACC,IAAI,CAAC,OAAO,EAAER,KAAK,CAAC;IAC/BO,UAAU,CAACC,IAAI,CACb,UAAU,EACV,IAAIlE,QAAQ,CAAC,CACXwD,IAAI,CAACY,IAAI,GAAGX,WAAW,EACvBD,IAAI,CAACa,IAAI,GAAGZ,WAAW,EACvBD,IAAI,CAACc,IAAI,GAAGb,WAAW,EACvBD,IAAI,CAACe,IAAI,GAAGd,WAAW,CACxB,CAAC,CACH;IACDQ,UAAU,CAACC,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAC3CC,UAAU,CAACC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACtD,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACG,aAAa,GAAGU,WAAW,CAAC;IAC3EQ,UAAU,CAACC,IAAI,CACb,SAAS,EACT,IAAI,CAACtD,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAACK,cAAc,GAAGQ,WAAW,CAClD;IACDQ,UAAU,CAACC,IAAI,CAAC,WAAW,EAAE,IAAI,CAACtD,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAAC4B,UAAU,GAAGf,WAAW,CAAC;IAC3EQ,UAAU,CAACC,IAAI,CAAC,SAAS,EAAE,IAAI,CAACtD,IAAI,CAAC+B,MAAM,CAACC,GAAG,CAAC6B,QAAQ,GAAGhB,WAAW,CAAC;IACvEQ,UAAU,CAACC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAE3B,MAAMQ,UAAU,GAAG,IAAI7E,SAAS,CAAC,MAAM,CAAC;IACxC6E,UAAU,CAACR,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;IAC1CQ,UAAU,CAACR,IAAI,CAAC,UAAU,EAAE,IAAI,CAACtD,IAAI,CAAC+D,KAAK,CAACC,cAAc,CAACC,EAAE,CAAC;IAC9DH,UAAU,CAACR,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;IAC3BQ,UAAU,CAACR,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC;IAC1CQ,UAAU,CAACR,IAAI,CACb,eAAe,EACf,IAAIpE,aAAa,CAAC;MAChBgF,QAAQ,EAAE,IAAI/E,SAAS,CAAC,UAAU,CAAC;MACnCgF,QAAQ,EAAE,IAAIhF,SAAS,CAAC,OAAO,CAAC;MAChCiF,UAAU,EAAE;IACd,CAAC,CAAC,CACH;IACDN,UAAU,CAACR,IAAI,CAAC,gBAAgB,EAAED,UAAU,CAACgB,WAAW,EAAE,CAAC;IAE3D1B,OAAO,CAACW,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;IAChCX,OAAO,CAACW,IAAI,CAAC,UAAU,EAAE,IAAI,CAACtD,IAAI,CAAC+D,KAAK,CAACC,cAAc,CAACC,EAAE,CAAC;IAC3DtB,OAAO,CAACW,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC;IACtCX,OAAO,CAACW,IAAI,CAAC,iBAAiB,EAAE,IAAIlE,QAAQ,CAAC,CAAC0E,UAAU,CAACO,WAAW,EAAE,CAAC,CAAC,CAAC;;IAEzE;IACA,MAAMC,OAAO,GAAG,EAAE;MAChBC,OAAO,GAAG,IAAI,CAAClE,MAAM,CAACmE,IAAI,EAAE;IAC9B,KAAK,MAAMC,IAAI,IAAIF,OAAO,EAAE;MAC1B,IAAIE,IAAI,GAAG,EAAE,EAAE;QACb;MACF;MAEA,MAAMxD,KAAK,GAAGyD,IAAI,CAACC,KAAK,CACtB,IAAI,CAACtE,MAAM,CAACS,MAAM,CAAC2D,IAAI,CAAC,CAAClD,YAAY,GAAGsB,WAAW,CACpD;MACDyB,OAAO,CAAC5C,IAAI,CAAC+C,IAAI,GAAG,EAAE,CAAC;MACvBH,OAAO,CAAC5C,IAAI,CAAC,IAAItC,QAAQ,CAAC,CAAC6B,KAAK,CAAC,CAAC,CAAC;IACrC;IAEA6C,UAAU,CAACR,IAAI,CAAC,GAAG,EAAE,IAAIlE,QAAQ,CAACkF,OAAO,CAAC,CAAC;;IAE3C;IACA,MAAME,IAAI,GAAG,IAAInF,SAAS,EAAE;IAC5BmF,IAAI,CAACI,SAAS,CAAC,sCAAsC,CAAC;IACtDJ,IAAI,CAACI,SAAS,CAAC,eAAe,CAAC;IAC/BJ,IAAI,CAACI,SAAS,CAAC,WAAW,CAAC;IAC3BJ,IAAI,CAACI,SAAS,CAAC,mBAAmB,CAAC;IACnCJ,IAAI,CAACI,SAAS,CAAC,qBAAqB,CAAC;IACrCJ,IAAI,CAACI,SAAS,CAAC,wBAAwB,CAAC;IACxCJ,IAAI,CAACI,SAAS,CAAC,iBAAiB,CAAC;IACjCJ,IAAI,CAACI,SAAS,CAAC,QAAQ,CAAC;IACxBJ,IAAI,CAACI,SAAS,CAAC,uBAAuB,CAAC;IACvCJ,IAAI,CAACI,SAAS,CAAC,iBAAiB,CAAC;IACjCJ,IAAI,CAACI,SAAS,CAAC,uBAAuB,CAAC;IACvCJ,IAAI,CAACI,SAAS,CAAC,cAAc,CAAC;IAC9BJ,IAAI,CAACI,SAAS,CAAC,mBAAmB,CAAC;IAEnC,MAAMC,OAAO,GAAG,IAAI,CAACxE,MAAM,CAACA,MAAM;MAChCyE,KAAK,GAAG,EAAE;IACZ,KAAK,MAAML,IAAI,IAAII,OAAO,EAAE;MAC1B,IAAIJ,IAAI,GAAG,EAAE,EAAE;QACb;MACF;MAEA,IAAIK,KAAK,CAAC1D,MAAM,IAAI,GAAG,EAAE;QACvBoD,IAAI,CAACI,SAAS,CAACE,KAAK,CAAC1D,MAAM,GAAG,cAAc,CAAC;QAC7C,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4D,KAAK,CAAC1D,MAAM,EAAE,EAAEF,CAAC,EAAE;UACrCsD,IAAI,CAACI,SAAS,CAACE,KAAK,CAAC5D,CAAC,CAAC,CAAC;QAC1B;QACAsD,IAAI,CAACI,SAAS,CAAC,WAAW,CAAC;QAC3BE,KAAK,CAAC1D,MAAM,GAAG,CAAC;MAClB;MAEA0D,KAAK,CAACpD,IAAI,CACR,GAAG,GACD,CAAC,MAAM,GAAG,CAAC,CAAC+C,IAAI,GAAG,EAAE,EAAEM,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,GAC9C,GAAG;MAAG;MACN,GAAG,GACH,CAAC,MAAM,GAAGH,OAAO,CAACJ,IAAI,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,GAC/C,GAAG,CAAE;MAAA,CACR;IACH;;IAEA,IAAIF,KAAK,CAAC1D,MAAM,EAAE;MAChBoD,IAAI,CAACI,SAAS,CAACE,KAAK,CAAC1D,MAAM,GAAG,cAAc,CAAC;MAC7C0D,KAAK,CAACG,OAAO,CAAC,UAAUC,IAAI,EAAE;QAC5BV,IAAI,CAACI,SAAS,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC;MACFV,IAAI,CAACI,SAAS,CAAC,WAAW,CAAC;IAC7B;IAEAJ,IAAI,CAACI,SAAS,CAAC,SAAS,CAAC;IACzBJ,IAAI,CAACI,SAAS,CAAC,+CAA+C,CAAC;IAC/DJ,IAAI,CAACI,SAAS,CAAC,KAAK,CAAC;IACrBJ,IAAI,CAACI,SAAS,CAAC,KAAK,CAAC;IAErBjC,OAAO,CAACW,IAAI,CAAC,WAAW,EAAEkB,IAAI,CAACH,WAAW,EAAE,CAAC;;IAE7C;IACA,MAAMc,IAAI,GAAG,IAAI,CAAC9E,MAAM,CAAC+E,IAAI,EAAE;IAC/B,MAAMC,GAAG,GAAGC,MAAM,CAACH,IAAI,CAAC;IAExB,MAAMI,IAAI,GAAG,IAAIlG,SAAS,EAAE;IAC5BkG,IAAI,CAACC,MAAM,CAAClC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC;IACvCiC,IAAI,CAACC,MAAM,CAAClC,IAAI,CAAC,QAAQ,EAAE+B,GAAG,CAACjE,MAAM,GAAG,CAAC,CAAC;IAC1CmE,IAAI,CAACC,MAAM,CAAClC,IAAI,CAAC,SAAS,EAAE6B,IAAI,CAACM,UAAU,CAAC;IAC5CF,IAAI,CAACC,MAAM,CAAClC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC;IAC5CiC,IAAI,CAACG,OAAO,GAAGL,GAAG,GAAG,KAAK;IAE1BhC,UAAU,CAACC,IAAI,CAAC,WAAW,EAAEiC,IAAI,CAAClB,WAAW,EAAE,CAAC;IAEhD,MAAM3B,GAAG,CAACiD,YAAY,CAACJ,IAAI,CAAC;IAC5B,MAAM7C,GAAG,CAACiD,YAAY,CAACtC,UAAU,CAAC;IAClC,MAAMX,GAAG,CAACiD,YAAY,CAAC7B,UAAU,CAAC;IAClC,MAAMpB,GAAG,CAACiD,YAAY,CAACnB,IAAI,CAAC;IAC5B,MAAM9B,GAAG,CAACiD,YAAY,CAAChD,OAAO,CAAC;EACjC;AACF;AAEA,SAASiD,KAAKA,CAACC,CAAC,EAAE;EAChB,IAAIA,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,GAAGA,CAAC,CAACd,QAAQ,CAAC,EAAE,CAAC;EACvC,OAAOc,CAAC,CAACd,QAAQ,CAAC,EAAE,CAAC;AACvB;AAEA,SAASO,MAAMA,CAACxF,EAAE,EAAE;EAClB,MAAMgG,IAAI,GAAG,IAAIC,UAAU,CAACjG,EAAE,CAAC;EAC/B,IAAIuF,GAAG,GAAG,EAAE;EACZ,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGrB,EAAE,CAAC2F,UAAU,EAAEvE,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;IACjDmE,GAAG,IAAIO,KAAK,CAACE,IAAI,CAAC5E,CAAC,CAAC,CAAC;EACvB;EACA,OAAOmE,GAAG;AACZ"},"metadata":{},"sourceType":"script"}