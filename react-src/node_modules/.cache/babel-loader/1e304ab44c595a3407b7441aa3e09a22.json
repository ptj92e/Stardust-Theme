{"ast":null,"code":"\"use strict\";\n\nconst PDFString = require(\"./object/string\");\nconst precision = 3;\n\n// low level PDF operations\nmodule.exports = {\n  BT() {\n    return this.write(\"BT\");\n  },\n  ET() {\n    return this.write(\"ET\");\n  },\n  Tf(font, size) {\n    return this.write(font, size, \"Tf\");\n  },\n  // use SC instead\n  // rg(r, g, b) {\n  //   return this.write(r, g, b, 'rg')\n  // },\n\n  Tm(a, b, c, d, e, f) {\n    return this.write(a, b, c, d, e, f, \"Tm\");\n  },\n  Tj(str, asHex) {\n    return this.write(str, \"Tj\");\n  },\n  TJ(arr) {\n    return this.write(\"[\" + arr.map(v => {\n      if (typeof v === \"number\") {\n        return this.toFixed(v, precision);\n      } else {\n        return v;\n      }\n    }).join(\" \") + \"]\", \"TJ\");\n  },\n  Td(x, y) {\n    return this.write(x, y, \"Td\");\n  },\n  // set the current color space to use for stroking operations\n  CS(name) {\n    return this.write(name, \"CS\");\n  },\n  // same as CS but used for nonstroking operations.\n  cs(name) {\n    return this.write(name, \"cs\");\n  },\n  // set the color to use for stroking operations\n  SC(c1, c2, c3) {\n    return this.write(c1, c2, c3, \"SC\");\n  },\n  // same as SC but used for nonstroking operations.\n  sc(c1, c2, c3) {\n    return this.write(c1, c2, c3, \"sc\");\n  },\n  // modify the current transformation matrix\n  // translate: [ 1 0 0 1 x y ]\n  // scale:     [ x 0 0 y 0 0 ]\n  // rotate:    [ cosθ sinθ −sinθ cosθ 0 0 ]\n  cm(a, b, c, d, e, f) {\n    return this.write(a, b, c, d, e, f, \"cm\");\n  },\n  // save the current graphics state on the graphics state stack\n  q() {\n    return this.write(\"q\");\n  },\n  // restore the graphics state by removing the most recently saved state from the stack\n  Q() {\n    return this.write(\"Q\");\n  },\n  // append a rectangle to the current path as a complete subpath\n  re(x, y, width, height) {\n    return this.write(x, y, width, height, \"re\");\n  },\n  // fill the path\n  f() {\n    return this.write(\"f\");\n  },\n  // set the text leading (used by T*)\n  TL(leading) {\n    return this.write(leading, \"TL\");\n  },\n  // T* move to the start of the next line, same as: 0 leading Td\n  Tstar() {\n    return this.write(\"T*\");\n  },\n  // paint xobject\n  Do(alias) {\n    return this.write(alias, \"Do\");\n  },\n  // line width\n  w(lineWidth) {\n    return this.write(lineWidth, \"w\");\n  },\n  // stroke the path\n  S() {\n    const args = Array.prototype.slice.call(arguments);\n    args.push(\"S\");\n    return this.write.apply(this, args);\n  },\n  write() {\n    const line = Array.prototype.map.call(arguments, arg => {\n      if (arg === undefined || arg === null) {\n        console.warn(\"received an undefined/null operation argument\");\n      }\n      // TODO: use precision option\n      return typeof arg === \"number\" ? this.toFixed(arg, precision) : arg;\n    });\n    return line.join(\" \") + \"\\n\";\n  },\n  toFixed(num, precision) {\n    return (+(Math.floor(+(num + \"e\" + precision)) + \"e\" + -precision)).toFixed(precision);\n  }\n};","map":{"version":3,"names":["PDFString","require","precision","module","exports","BT","write","ET","Tf","font","size","Tm","a","b","c","d","e","f","Tj","str","asHex","TJ","arr","map","v","toFixed","join","Td","x","y","CS","name","cs","SC","c1","c2","c3","sc","cm","q","Q","re","width","height","TL","leading","Tstar","Do","alias","w","lineWidth","S","args","Array","prototype","slice","call","arguments","push","apply","line","arg","undefined","console","warn","num","Math","floor"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/pdfjs/lib/ops.js"],"sourcesContent":["\"use strict\";\n\nconst PDFString = require(\"./object/string\");\n\nconst precision = 3;\n\n// low level PDF operations\nmodule.exports = {\n  BT() {\n    return this.write(\"BT\");\n  },\n\n  ET() {\n    return this.write(\"ET\");\n  },\n\n  Tf(font, size) {\n    return this.write(font, size, \"Tf\");\n  },\n\n  // use SC instead\n  // rg(r, g, b) {\n  //   return this.write(r, g, b, 'rg')\n  // },\n\n  Tm(a, b, c, d, e, f) {\n    return this.write(a, b, c, d, e, f, \"Tm\");\n  },\n\n  Tj(str, asHex) {\n    return this.write(str, \"Tj\");\n  },\n\n  TJ(arr) {\n    return this.write(\n      \"[\" +\n        arr\n          .map((v) => {\n            if (typeof v === \"number\") {\n              return this.toFixed(v, precision);\n            } else {\n              return v;\n            }\n          })\n          .join(\" \") +\n        \"]\",\n      \"TJ\",\n    );\n  },\n\n  Td(x, y) {\n    return this.write(x, y, \"Td\");\n  },\n\n  // set the current color space to use for stroking operations\n  CS(name) {\n    return this.write(name, \"CS\");\n  },\n\n  // same as CS but used for nonstroking operations.\n  cs(name) {\n    return this.write(name, \"cs\");\n  },\n\n  // set the color to use for stroking operations\n  SC(c1, c2, c3) {\n    return this.write(c1, c2, c3, \"SC\");\n  },\n\n  // same as SC but used for nonstroking operations.\n  sc(c1, c2, c3) {\n    return this.write(c1, c2, c3, \"sc\");\n  },\n\n  // modify the current transformation matrix\n  // translate: [ 1 0 0 1 x y ]\n  // scale:     [ x 0 0 y 0 0 ]\n  // rotate:    [ cosθ sinθ −sinθ cosθ 0 0 ]\n  cm(a, b, c, d, e, f) {\n    return this.write(a, b, c, d, e, f, \"cm\");\n  },\n\n  // save the current graphics state on the graphics state stack\n  q() {\n    return this.write(\"q\");\n  },\n\n  // restore the graphics state by removing the most recently saved state from the stack\n  Q() {\n    return this.write(\"Q\");\n  },\n\n  // append a rectangle to the current path as a complete subpath\n  re(x, y, width, height) {\n    return this.write(x, y, width, height, \"re\");\n  },\n\n  // fill the path\n  f() {\n    return this.write(\"f\");\n  },\n\n  // set the text leading (used by T*)\n  TL(leading) {\n    return this.write(leading, \"TL\");\n  },\n\n  // T* move to the start of the next line, same as: 0 leading Td\n  Tstar() {\n    return this.write(\"T*\");\n  },\n\n  // paint xobject\n  Do(alias) {\n    return this.write(alias, \"Do\");\n  },\n\n  // line width\n  w(lineWidth) {\n    return this.write(lineWidth, \"w\");\n  },\n\n  // stroke the path\n  S() {\n    const args = Array.prototype.slice.call(arguments);\n    args.push(\"S\");\n    return this.write.apply(this, args);\n  },\n\n  write() {\n    const line = Array.prototype.map.call(arguments, (arg) => {\n      if (arg === undefined || arg === null) {\n        console.warn(\"received an undefined/null operation argument\");\n      }\n      // TODO: use precision option\n      return typeof arg === \"number\" ? this.toFixed(arg, precision) : arg;\n    });\n    return line.join(\" \") + \"\\n\";\n  },\n\n  toFixed(num, precision) {\n    return (+(Math.floor(+(num + \"e\" + precision)) + \"e\" + -precision)).toFixed(\n      precision,\n    );\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}