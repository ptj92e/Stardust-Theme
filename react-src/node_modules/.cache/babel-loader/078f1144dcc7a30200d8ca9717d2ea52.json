{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\nvar UnicodeTrie, inflate;\ninflate = require('tiny-inflate');\nUnicodeTrie = function () {\n  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n  SHIFT_1 = 6 + 5;\n  SHIFT_2 = 5;\n  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n  INDEX_SHIFT = 2;\n  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n  function UnicodeTrie(data) {\n    var isBuffer, uncompressedLength, view;\n    isBuffer = typeof data.readUInt32BE === 'function' && typeof data.slice === 'function';\n    if (isBuffer || data instanceof Uint8Array) {\n      if (isBuffer) {\n        this.highStart = data.readUInt32BE(0);\n        this.errorValue = data.readUInt32BE(4);\n        uncompressedLength = data.readUInt32BE(8);\n        data = data.slice(12);\n      } else {\n        view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0);\n        this.errorValue = view.getUint32(4);\n        uncompressedLength = view.getUint32(8);\n        data = data.subarray(12);\n      }\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      this.data = new Uint32Array(data.buffer);\n    } else {\n      this.data = data.data, this.highStart = data.highStart, this.errorValue = data.errorValue;\n    }\n  }\n  UnicodeTrie.prototype.get = function (codePoint) {\n    var index;\n    if (codePoint < 0 || codePoint > 0x10ffff) {\n      return this.errorValue;\n    }\n    if (codePoint < 0xd800 || codePoint > 0xdbff && codePoint <= 0xffff) {\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint <= 0xffff) {\n      index = (this.data[LSCP_INDEX_2_OFFSET + (codePoint - 0xd800 >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint < this.highStart) {\n      index = this.data[INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> SHIFT_1)];\n      index = this.data[index + (codePoint >> SHIFT_2 & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    return this.data[this.data.length - DATA_GRANULARITY];\n  };\n  return UnicodeTrie;\n}();\nmodule.exports = UnicodeTrie;","map":{"version":3,"names":["UnicodeTrie","inflate","require","DATA_BLOCK_LENGTH","DATA_GRANULARITY","DATA_MASK","INDEX_1_OFFSET","INDEX_2_BLOCK_LENGTH","INDEX_2_BMP_LENGTH","INDEX_2_MASK","INDEX_SHIFT","LSCP_INDEX_2_LENGTH","LSCP_INDEX_2_OFFSET","OMITTED_BMP_INDEX_1_LENGTH","SHIFT_1","SHIFT_1_2","SHIFT_2","UTF8_2B_INDEX_2_LENGTH","UTF8_2B_INDEX_2_OFFSET","data","isBuffer","uncompressedLength","view","readUInt32BE","slice","Uint8Array","highStart","errorValue","DataView","buffer","getUint32","subarray","Uint32Array","prototype","get","codePoint","index","length","module","exports"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/unicode-trie/index.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\nvar UnicodeTrie, inflate;\n\ninflate = require('tiny-inflate');\n\nUnicodeTrie = (function() {\n  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n\n  SHIFT_1 = 6 + 5;\n\n  SHIFT_2 = 5;\n\n  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n  INDEX_SHIFT = 2;\n\n  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n\n  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n\n  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n\n  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\n  function UnicodeTrie(data) {\n    var isBuffer, uncompressedLength, view;\n    isBuffer = typeof data.readUInt32BE === 'function' && typeof data.slice === 'function';\n    if (isBuffer || data instanceof Uint8Array) {\n      if (isBuffer) {\n        this.highStart = data.readUInt32BE(0);\n        this.errorValue = data.readUInt32BE(4);\n        uncompressedLength = data.readUInt32BE(8);\n        data = data.slice(12);\n      } else {\n        view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0);\n        this.errorValue = view.getUint32(4);\n        uncompressedLength = view.getUint32(8);\n        data = data.subarray(12);\n      }\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      this.data = new Uint32Array(data.buffer);\n    } else {\n      this.data = data.data, this.highStart = data.highStart, this.errorValue = data.errorValue;\n    }\n  }\n\n  UnicodeTrie.prototype.get = function(codePoint) {\n    var index;\n    if (codePoint < 0 || codePoint > 0x10ffff) {\n      return this.errorValue;\n    }\n    if (codePoint < 0xd800 || (codePoint > 0xdbff && codePoint <= 0xffff)) {\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint <= 0xffff) {\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint < this.highStart) {\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    return this.data[this.data.length - DATA_GRANULARITY];\n  };\n\n  return UnicodeTrie;\n\n})();\n\nmodule.exports = UnicodeTrie;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}