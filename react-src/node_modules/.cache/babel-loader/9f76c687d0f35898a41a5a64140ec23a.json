{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\stardust\\\\wp-content\\\\themes\\\\stardust-theme\\\\react-src\\\\src\\\\pages\\\\newsletters\\\\newsletters.js\";\nimport React, { useEffect, useState } from 'react';\nimport { pdfjs, getPage } from 'pdfjs';\nimport PageFlip from 'react-pageflip';\nimport PageTitle from '../../components/pageTItle/pageTitle';\nimport HTMLService from '../../services/htmlService';\nimport NewslettersService from '../../services/newsletterService';\nimport './newsletters.css';\nfunction NewslettersPage() {\n  const [newsletter, setNewsletter] = useState({});\n  const [newsletterList, setNewsletterList] = useState([]);\n  const [pdfUrl, setPdfUrl] = useState('');\n  useEffect(() => {\n    async function getNewsletters() {\n      let response = await NewslettersService.getNewsletters();\n      if (response.length) {\n        setNewsletter(response[0]);\n        setPdfUrl(HTMLService.sanatizeHTML(response[0].content.rendered));\n        if (response.length > 1) {\n          response.shift();\n          setNewsletterList(response);\n        }\n      }\n    }\n    getNewsletters();\n  }, []);\n  useEffect(() => {\n    const fetchPDF = async () => {\n      try {\n        const pdfData = await fetch(pdfUrl);\n        console.log(pdfData);\n        const pdfBlob = await pdfData.blob();\n        console.log(pdfBlob);\n        const document = await pdfjs.getDocument(pdfBlob).promise;\n        console.log(document);\n        //setNumPages(numPages);\n      } catch (error) {\n        console.error('Error fetching PDF:', error);\n      }\n    };\n    fetchPDF();\n  }, [pdfUrl]);\n  const PDFViewer = ({\n    pdfUrl\n  }) => {\n    const [numPages, setNumPages] = useState(null);\n    const [pages, setPages] = useState([]);\n    useEffect(() => {\n      const fetchPDF = async () => {\n        try {\n          const pdfData = await fetch(pdfUrl);\n          const pdfBlob = await pdfData.blob();\n          const pdfDocument = await pdfjs.getDocument({\n            data: pdfBlob\n          }).promise;\n          setNumPages(pdfDocument.numPages);\n          const pagesArray = Array.from({\n            length: pdfDocument.numPages\n          }, (_, index) => index + 1);\n          setPages(pagesArray);\n        } catch (error) {\n          console.error('Error fetching PDF:', error);\n        }\n      };\n      fetchPDF();\n    }, [pdfUrl]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, pages.map(pageNumber => /*#__PURE__*/React.createElement(\"div\", {\n      key: pageNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Page, {\n      pageNumber: pageNumber,\n      pdfUrl: pdfUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }))));\n  };\n  const Page = ({\n    pageNumber,\n    pdfUrl\n  }) => {\n    const [page, setPage] = useState(null);\n    useEffect(() => {\n      const fetchPage = async () => {\n        const pdfData = await fetch(pdfUrl);\n        const pdfBlob = await pdfData.blob();\n        const pdfDocument = await pdfjs.getDocument({\n          data: pdfBlob\n        }).promise;\n        const pdfPage = await pdfDocument.getPage(pageNumber);\n        setPage(pdfPage);\n      };\n      fetchPage();\n    }, [pdfUrl, pageNumber]);\n    if (!page) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: page,\n      alt: `Page ${pageNumber}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }));\n  };\n  const FlipBook = ({\n    children\n  }) => {\n    return /*#__PURE__*/React.createElement(PageFlip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, children);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"newsletters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    image: \"#\",\n    pageTitle: \"Newsletters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FlipBook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })));\n}\nexport default NewslettersPage;","map":{"version":3,"names":["React","useEffect","useState","pdfjs","getPage","PageFlip","PageTitle","HTMLService","NewslettersService","NewslettersPage","newsletter","setNewsletter","newsletterList","setNewsletterList","pdfUrl","setPdfUrl","getNewsletters","response","length","sanatizeHTML","content","rendered","shift","fetchPDF","pdfData","fetch","console","log","pdfBlob","blob","document","getDocument","promise","error","PDFViewer","numPages","setNumPages","pages","setPages","pdfDocument","data","pagesArray","Array","from","_","index","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","pageNumber","key","Page","page","setPage","fetchPage","pdfPage","src","alt","FlipBook","children","id","image","pageTitle"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/src/pages/newsletters/newsletters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { pdfjs, getPage } from 'pdfjs';\r\nimport PageFlip from 'react-pageflip';\r\n\r\nimport PageTitle from '../../components/pageTItle/pageTitle';\r\n\r\nimport HTMLService from '../../services/htmlService';\r\nimport NewslettersService from '../../services/newsletterService';\r\n\r\nimport './newsletters.css';\r\n\r\nfunction NewslettersPage() {\r\n    const [newsletter, setNewsletter] = useState({});\r\n    const [newsletterList, setNewsletterList] = useState([]);\r\n    const [pdfUrl, setPdfUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getNewsletters() {\r\n            let response = await NewslettersService.getNewsletters();\r\n\r\n            if (response.length) {\r\n                setNewsletter(response[0]);\r\n                setPdfUrl(HTMLService.sanatizeHTML(response[0].content.rendered));\r\n\r\n                if (response.length > 1) {\r\n                    response.shift();\r\n                    setNewsletterList(response);\r\n                }\r\n            }\r\n        }\r\n\r\n        getNewsletters();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchPDF = async () => {\r\n            try {\r\n                const pdfData = await fetch(pdfUrl);\r\n                console.log(pdfData);\r\n                const pdfBlob = await pdfData.blob();\r\n                console.log(pdfBlob);\r\n                const document = await pdfjs.getDocument(pdfBlob).promise;\r\n                console.log(document);\r\n                //setNumPages(numPages);\r\n            } catch (error) {\r\n            console.error('Error fetching PDF:', error);\r\n            }\r\n        };\r\n  \r\n        fetchPDF();\r\n    }, [pdfUrl])\r\n\r\n    const PDFViewer = ({ pdfUrl }) => {\r\n        const [numPages, setNumPages] = useState(null);\r\n        const [pages, setPages] = useState([]);\r\n      \r\n        useEffect(() => {\r\n          const fetchPDF = async () => {\r\n            try {\r\n              const pdfData = await fetch(pdfUrl);\r\n              const pdfBlob = await pdfData.blob();\r\n              const pdfDocument = await pdfjs.getDocument({ data: pdfBlob }).promise;\r\n      \r\n              setNumPages(pdfDocument.numPages);\r\n              const pagesArray = Array.from({ length: pdfDocument.numPages }, (_, index) => index + 1);\r\n              setPages(pagesArray);\r\n            } catch (error) {\r\n              console.error('Error fetching PDF:', error);\r\n            }\r\n          };\r\n      \r\n          fetchPDF();\r\n        }, [pdfUrl]);\r\n      \r\n        return (\r\n          <div>\r\n            {pages.map((pageNumber) => (\r\n              <div key={pageNumber}>\r\n                <Page pageNumber={pageNumber} pdfUrl={pdfUrl} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      };\r\n      \r\n      const Page = ({ pageNumber, pdfUrl }) => {\r\n        const [page, setPage] = useState(null);\r\n      \r\n        useEffect(() => {\r\n          const fetchPage = async () => {\r\n            const pdfData = await fetch(pdfUrl);\r\n            const pdfBlob = await pdfData.blob();\r\n            const pdfDocument = await pdfjs.getDocument({ data: pdfBlob }).promise;\r\n            const pdfPage = await pdfDocument.getPage(pageNumber);\r\n      \r\n            setPage(pdfPage);\r\n          };\r\n      \r\n          fetchPage();\r\n        }, [pdfUrl, pageNumber]);\r\n      \r\n        if (!page) {\r\n          return <div>Loading...</div>;\r\n        }\r\n      \r\n        return (\r\n          <div>\r\n            {/* Render PDF page content here */}\r\n            <img src={page} alt={`Page ${pageNumber}`} />\r\n          </div>\r\n        );\r\n      };\r\n\r\n    const FlipBook = ({ children }) => {\r\n        return (\r\n            <PageFlip>\r\n                {children}\r\n            </PageFlip>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div id='newsletters'>\r\n            <PageTitle\r\n                image=\"#\"\r\n                pageTitle=\"Newsletters\"\r\n            />\r\n            <FlipBook>\r\n                <PDFViewer />\r\n            </FlipBook>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewslettersPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}