{"ast":null,"code":"\"use strict\";\n\nconst opentype = require(\"opentype.js\");\nmodule.exports = class FontSubset {\n  constructor(font) {\n    this.font = font;\n    this.name = \"PDFJS+\" + this.font.names.fontFamily.en;\n    this.glyphs = {\n      0: this.font.charToGlyph(String.fromCharCode(0)),\n      // notDef glyph\n      32: this.font.charToGlyph(String.fromCharCode(32)) // space\n    };\n\n    this.subset = {\n      0: 0,\n      32: 32\n    };\n    this.mapping = {\n      0: 0,\n      32: 32\n    };\n    this.pos = 33;\n  }\n  use(chars) {\n    for (let i = 0, len = chars.length; i < len; ++i) {\n      const code = chars.charCodeAt(i);\n      if (code in this.mapping || code < 33) {\n        continue;\n      }\n      const glyph = this.font.charToGlyph(chars[i]);\n      this.subset[this.pos] = code;\n      this.mapping[code] = this.pos;\n      this.glyphs[this.pos] = glyph;\n      this.pos++;\n    }\n  }\n  encode(str) {\n    const codes = [];\n    for (let i = 0, len = str.length; i < len; ++i) {\n      codes.push(this.mapping[str.charCodeAt(i)]);\n    }\n    return String.fromCharCode.apply(String, codes);\n  }\n  cmap() {\n    return this.subset;\n  }\n  save() {\n    const glyphs = [];\n    for (const pos in this.glyphs) {\n      glyphs.push(this.glyphs[pos]);\n    }\n    const font = new opentype.Font({\n      familyName: this.name,\n      styleName: this.font.names.fontSubfamily.en,\n      unitsPerEm: this.font.unitsPerEm,\n      ascender: this.font.ascender,\n      descender: this.font.descender,\n      glyphs: glyphs\n    });\n    return font.toArrayBuffer();\n  }\n};","map":{"version":3,"names":["opentype","require","module","exports","FontSubset","constructor","font","name","names","fontFamily","en","glyphs","charToGlyph","String","fromCharCode","subset","mapping","pos","use","chars","i","len","length","code","charCodeAt","glyph","encode","str","codes","push","apply","cmap","save","Font","familyName","styleName","fontSubfamily","unitsPerEm","ascender","descender","toArrayBuffer"],"sources":["C:/xampp/htdocs/stardust/wp-content/themes/stardust-theme/react-src/node_modules/pdfjs/lib/font/subset.js"],"sourcesContent":["\"use strict\";\n\nconst opentype = require(\"opentype.js\");\n\nmodule.exports = class FontSubset {\n  constructor(font) {\n    this.font = font;\n    this.name = \"PDFJS+\" + this.font.names.fontFamily.en;\n\n    this.glyphs = {\n      0: this.font.charToGlyph(String.fromCharCode(0)), // notDef glyph\n      32: this.font.charToGlyph(String.fromCharCode(32)), // space\n    };\n    this.subset = { 0: 0, 32: 32 };\n    this.mapping = { 0: 0, 32: 32 };\n    this.pos = 33;\n  }\n\n  use(chars) {\n    for (let i = 0, len = chars.length; i < len; ++i) {\n      const code = chars.charCodeAt(i);\n      if (code in this.mapping || code < 33) {\n        continue;\n      }\n\n      const glyph = this.font.charToGlyph(chars[i]);\n\n      this.subset[this.pos] = code;\n      this.mapping[code] = this.pos;\n      this.glyphs[this.pos] = glyph;\n\n      this.pos++;\n    }\n  }\n\n  encode(str) {\n    const codes = [];\n    for (let i = 0, len = str.length; i < len; ++i) {\n      codes.push(this.mapping[str.charCodeAt(i)]);\n    }\n    return String.fromCharCode.apply(String, codes);\n  }\n\n  cmap() {\n    return this.subset;\n  }\n\n  save() {\n    const glyphs = [];\n    for (const pos in this.glyphs) {\n      glyphs.push(this.glyphs[pos]);\n    }\n    const font = new opentype.Font({\n      familyName: this.name,\n      styleName: this.font.names.fontSubfamily.en,\n      unitsPerEm: this.font.unitsPerEm,\n      ascender: this.font.ascender,\n      descender: this.font.descender,\n      glyphs: glyphs,\n    });\n    return font.toArrayBuffer();\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEvCC,MAAM,CAACC,OAAO,GAAG,MAAMC,UAAU,CAAC;EAChCC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAACD,IAAI,CAACE,KAAK,CAACC,UAAU,CAACC,EAAE;IAEpD,IAAI,CAACC,MAAM,GAAG;MACZ,CAAC,EAAE,IAAI,CAACL,IAAI,CAACM,WAAW,CAACC,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;MAAE;MAClD,EAAE,EAAE,IAAI,CAACR,IAAI,CAACM,WAAW,CAACC,MAAM,CAACC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAE;IACtD,CAAC;;IACD,IAAI,CAACC,MAAM,GAAG;MAAE,CAAC,EAAE,CAAC;MAAE,EAAE,EAAE;IAAG,CAAC;IAC9B,IAAI,CAACC,OAAO,GAAG;MAAE,CAAC,EAAE,CAAC;MAAE,EAAE,EAAE;IAAG,CAAC;IAC/B,IAAI,CAACC,GAAG,GAAG,EAAE;EACf;EAEAC,GAAGA,CAACC,KAAK,EAAE;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGF,KAAK,CAACG,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;MAChD,MAAMG,IAAI,GAAGJ,KAAK,CAACK,UAAU,CAACJ,CAAC,CAAC;MAChC,IAAIG,IAAI,IAAI,IAAI,CAACP,OAAO,IAAIO,IAAI,GAAG,EAAE,EAAE;QACrC;MACF;MAEA,MAAME,KAAK,GAAG,IAAI,CAACnB,IAAI,CAACM,WAAW,CAACO,KAAK,CAACC,CAAC,CAAC,CAAC;MAE7C,IAAI,CAACL,MAAM,CAAC,IAAI,CAACE,GAAG,CAAC,GAAGM,IAAI;MAC5B,IAAI,CAACP,OAAO,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,GAAG;MAC7B,IAAI,CAACN,MAAM,CAAC,IAAI,CAACM,GAAG,CAAC,GAAGQ,KAAK;MAE7B,IAAI,CAACR,GAAG,EAAE;IACZ;EACF;EAEAS,MAAMA,CAACC,GAAG,EAAE;IACV,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGM,GAAG,CAACL,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;MAC9CQ,KAAK,CAACC,IAAI,CAAC,IAAI,CAACb,OAAO,CAACW,GAAG,CAACH,UAAU,CAACJ,CAAC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOP,MAAM,CAACC,YAAY,CAACgB,KAAK,CAACjB,MAAM,EAAEe,KAAK,CAAC;EACjD;EAEAG,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAAChB,MAAM;EACpB;EAEAiB,IAAIA,CAAA,EAAG;IACL,MAAMrB,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMM,GAAG,IAAI,IAAI,CAACN,MAAM,EAAE;MAC7BA,MAAM,CAACkB,IAAI,CAAC,IAAI,CAAClB,MAAM,CAACM,GAAG,CAAC,CAAC;IAC/B;IACA,MAAMX,IAAI,GAAG,IAAIN,QAAQ,CAACiC,IAAI,CAAC;MAC7BC,UAAU,EAAE,IAAI,CAAC3B,IAAI;MACrB4B,SAAS,EAAE,IAAI,CAAC7B,IAAI,CAACE,KAAK,CAAC4B,aAAa,CAAC1B,EAAE;MAC3C2B,UAAU,EAAE,IAAI,CAAC/B,IAAI,CAAC+B,UAAU;MAChCC,QAAQ,EAAE,IAAI,CAAChC,IAAI,CAACgC,QAAQ;MAC5BC,SAAS,EAAE,IAAI,CAACjC,IAAI,CAACiC,SAAS;MAC9B5B,MAAM,EAAEA;IACV,CAAC,CAAC;IACF,OAAOL,IAAI,CAACkC,aAAa,EAAE;EAC7B;AACF,CAAC"},"metadata":{},"sourceType":"script"}